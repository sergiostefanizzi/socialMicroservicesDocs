openapi: 3.0.3
info:
  title: Microservices Social Network
  version: 1.0.11
  description: >-
    Here are written the API definition for a social network based on
    microservices technologies. This is a master thesis project.
  termsOfService: http://swagger.io/terms/
  contact:
    email: sergio.stefanizzi@finconsgroup.com
    name: Sergio Stefanizzi
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080/api/v1
    variables: {}
    description: Development server
tags:
  - name: account
    description: All about accounts
paths:
  /accounts:
    get:
      tags:
      - account
      summary: Find all accounts
      description: Find all the accounts and return them in an array
      operationId: findAllAccounts
      responses:
        '200':
          description: All accounts found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseFindAllAccounts'
    post:
      tags:
      - account
      summary: Add an account
      description: Add a new account and return the saved one
      operationId: addAcccount
      requestBody:
        description: The new account
        required: true
        content:
          applcation/json:
            schema:
              allOf:
               - $ref: '#/components/schemas/Account'
              required:
              - email
              - name
              - surname
              - brthdate
              - password
              - crc
              example:
                email: pinco_pallino@gmail.com
                name: Pinco
                surname: Pallino
                birthdate: 1980-05-14
                gender: male
                password: ab324bnmbnew
                crc: aadadeweewer
                version: 0
      responses:
        '201':
          description: Account added and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAddAccount'
        '400':
          description: Bad Request, account not added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAddAccountBadRequest'
  /accounts/{accountId}:
    get:
      tags:
        - account
      summary: Find an account
      description: Find an account by Id
      operationId: findAccountById
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: The account Id
      responses:
        '200':
          description: Account found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseFindOneAccount'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAccountNotFound'
    put:
      tags: 
        - account
      summary: Update an account
      description: Update an account and return the updated one
      operationId: updateAccountById
      parameters:
          - in: path
            name: accountId
            required: true
            schema:
              type: integer
              format: int64
              example: 1
            description: The account Id
      requestBody:
        required: true
        description: the account with updated values.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Account'
              required:
                - email
                - name
                - surname
                - brthdate
                - password
              example:
                email: pinco_pallino@outlook.com
                name: Pinco
                surname: Pallino
                birthdate: 1980-05-14
                gender: male
                password: ab324bnmbnew
                validated_at: 2023-04-04T16:08:30Z
                updated_at: 2023-06-05T20:05:20Z
                deleted_at: null
                version: 2
      responses:
        '200':
          description: Account updated and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUpdateAccount'
        '400':
          description: Bad Request, account not updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAccountBadRequest'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAccountNotFound'
      
    delete:
      tags: 
        - account
      summary: Delete an account
      description: Delete an account
      operationId: deleteAccountById
      parameters:
          - in: path
            name: accountId
            required: true
            schema:
              type: integer
              format: int64
              example: 1
            description: The account Id
      responses:
        '200':
          description: Account deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDeleteAccount'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAccountNotFound'        
  /profiles:
    get:
      tags:
      - profile
      summary: Find all profiles
      description: Find all the profiles and return them in an array
      operationId: findAllProfiles
      responses:
        '200':
          description: All profiles found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseFindAllProfiles'
    post:
      tags:
      - profile
      summary: Add a profile
      description: Add a new profile and return the saved one
      operationId: addProfile
      requestBody:
        description: The new profile
        required: true
        content:
          applcation/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Profile'
              required:
              - profile_name
              - bio
              - picture_url
              - is_private
              - account
      responses:
        '201':
          description: Account added and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAddProfile'
        '400':
          description: Bad Request, account not added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAddProfileBadRequest'
                
  /profiles/{profileId}:
    get:
      tags:
        - profile
      summary: Find a profile
      description: Find a profile by Id
      operationId: findProfiletById
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: The profile Id
      responses:
        '200':
          description: Profile found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseFindOneProfile'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseProfileNotFound'
                
    put:
      tags: 
        - profile
      summary: Update a profile
      description: Update a profile and return the updated one
      operationId: updateProfileById
      parameters:
          - in: path
            name: profileId
            required: true
            schema:
              type: integer
              format: int64
              example: 1
            description: The profile Id
      requestBody:
        required: true
        description: the profile with updated values.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Profile'
              required:
              - profile_name
              - bio
              - picture_url
              - is_private
              - account
              example:
                profile_name: pinco_pallino
                bio: 'Questo Ã¨ il profilo di Pinco Pallino'
                picture_url: null
                is_private: true
                created_at: 2023-04-04T16:08:30Z
                updated_at: 2023-06-05T20:05:20Z
                deleted_at: null
                blocked_until: null
                version: 2
                account:
                  id: 1
                  email: pinco_pallino@gmail.com
                  name: Pinco
                  surname: Pallino
                  birthdate: 1980-05-14
                  gender: male
                  password: ab324bnmbnew
                  crc: aadadeweewer
                  validated_at: 2023-04-04T16:08:30Z
                  updated_at: 2023-06-05T20:05:20Z
                  deleted_at: null
                  version: 1
      responses:
        '200':
          description: Profile updated and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUpdateProfile'
        '400':
          description: Bad Request, profile not updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseProfileBadRequest'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseProfileNotFound'
                
    delete:
      tags: 
        - profile
      summary: Delete a profile
      description: Delete a profile
      operationId: deleteProfileById
      parameters:
          - in: path
            name: profileId
            required: true
            schema:
              type: integer
              format: int64
              example: 1
            description: The profile Id
      responses:
        '200':
          description: Profile deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDeleteProfile'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseProfileNotFound'
                
  /follows/{followsId}:
    post:
      tags:
        - follows
      summary: Follow a profile
      description: Follow a profile
      operationId: addFollows
      parameters:
          - in: path
            name: followsId
            required: true
            schema:
              type: integer
              format: int64
              example: 1
            description: The follows Id
      requestBody:
        description: The new profile
        required: true
        content:
          applcation/json:
            schema:
              $ref: '#/components/schemas/Follows'
      responses:
        '201':
          description: Profile followed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follows'
                
  /profiles/{profileId}/followers:
    get:
      tags:
        - follows
      summary: Find followers
      description: Find all the followers of a profile
      operationId: findAllFollowers
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: The profile Id
      responses:
        '200':
          description: All followers found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseFindAllFollowers'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseProfileNotFound' 
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: false
          example: 1 
          readOnly: true
        email:
          type: string
          format: email
          nullable: false
          example: pinco_pallino@gmail.com
        name:
          type: string
          nullable: false
          minLength: 2
          maxLength: 50
          example: Pinco
        surname:
          type: string
          nullable: false
          minLength: 2
          maxLength: 50
          example: Pallino
        birthdate:
          type: string
          format: date
          nullable: false
          example: 1980-05-14
        gender:
          type: string
          nullable: true
          enum: [male, female, null]
          example: male
        password:
          type: string
          format: password
          nullable: false
          minLength: 5
          maxLength: 255
          example: ab324bnmbnew
        crc:
          type: string
          maxLength: 255
          nullable: true
          example: aadadeweewer
        validated_at:
          type: string
          format: date-time
          nullable: false
          example: 2023-04-04T16:08:30Z
        updated_at:
          type: string
          format: date-time
          nullable: true
          example: 2023-06-05T20:05:20Z
        deleted_at:
          type: string
          format: date-time
          nullable: true
          example: null
        version:
          type: integer
          format: int64
          nullable: false
          example: 1
        profiles:
          $ref: '#/components/schemas/ProfileList'
          
    Profile:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: false
          readOnly: true
          example: 1
        profile_name:
          type: string
          nullable: false
          minLength: 3
          maxLength: 30
          example: pinco_pallino
        bio:
          type: string
          nullable: true
          maxLength: 150
          example: Questo Ã¨ il profilo di Pinco Pallino
        picture_url:
          type: string
          nullable: true
          example: https://t3.ftcdn.net/jpg/03/42/99/68/360_F_342996846_tHMepJOsXWwbvMpG7uiYpE68wbfQ9e4s.jpg
        is_private:
          type: boolean
          nullable: false
          example: false
        created_at:
          type: string
          format: date-time
          nullable: false
          example: 2023-04-04T16:08:30Z
        updated_at:
          type: string
          format: date-time
          nullable: true
          example: null
        deleted_at:
          type: string
          format: date-time
          nullable: true
          example: null
        blocked_until:
          type: string
          format: date-time
          nullable: true
          example: null
        version:
          type: integer
          format: int64
          nullable: false
          example: 1
        account:
          $ref: '#/components/schemas/Account'
        followers:
          $ref: '#/components/schemas/FollowsList'
        followings:
          $ref: '#/components/schemas/FollowsList'
        
    Follows:
      type: object
      properties:
        follows_id:
          $ref: '#/components/schemas/FollowsId'
        accepted:
          type: boolean
          nullable: false
          example: true
        followed_at:
          type: string
          format: date-time
          nullable: false
          example: 2023-04-04T16:08:30Z
        unfollowed_at:
          type: string
          format: date-time
          nullable: true
          example: null
        version:
          type: integer
          format: int64
          nullable: false
          example: 1
          
    FollowsId:
      type: object
      properties:
        follower_id:
          $ref: '#/components/schemas/Profile'
        follows_id:
          $ref: '#/components/schemas/Profile'
        
    AccountList:
      type: array
      items:
        $ref: '#/components/schemas/Account'
      example:
        - id: 1
          email: pinco_pallino@gmail.com
          name: Pinco
          surname: Pallino
          birthdate: 1980-05-14
          gender: male
          password: ab324bnmbnew
          crc: aadadeweewer
          validated_at: 2023-04-04T16:08:30Z
          updated_at: 2023-06-05T20:05:20Z
          deleted_at: null
          version: 1
        - id: 2
          email: mario.rossi@gmail.com
          name: Mario
          surname: Rossi
          birthdate: 1989-03-17
          gender: male
          password: retiuyyiurtiu
          crc: 3426hbfdgsdg
          validated_at: 2023-04-04T16:08:30Z
          updated_at: 2023-06-05T20:05:20Z
          deleted_at: 2023-07-21T10:25:34Z
          version: 1
        
    ProfileList:
      type: array
      items:
        $ref: '#/components/schemas/Profile'
      example:
        - id: 1
          profile_name: pinco_pallino
          bio: Questo Ã¨ il profilo di Pinco Pallino
          picture_url: https://t3.ftcdn.net/jpg/03/42/99/68/360_F_342996846_tHMepJOsXWwbvMpG7uiYpE68wbfQ9e4s.jpg
          is_pivate: false
          created_at: 2023-04-04T16:08:30Z
          updated_at: null
          deleted_at: null
          blocked_untill: null
          version: 1
          account:
            id: 1
            email: pinco_pallino@gmail.com
            name: Pinco
            surname: Pallino
            birthdate: 1980-05-14
            gender: male
            password: ab324bnmbnew
            crc: aadadeweewer
            validated_at: 2023-04-04T16:08:30Z
            updated_at: 2023-06-05T20:05:20Z
            deleted_at: null
            version: 1
        - id: 2
          profile_name: mario.rossi
          bio:  null
          picture_url: null
          is_pivate: true
          created_at: 2023-04-04T16:08:30Z
          updated_at: 2023-06-05T20:05:20Z
          deleted_at: 2023-07-21T10:25:34Z
          blocked_untill: null
          version: 1
          account:
            id: 2
            email: mario.rossi@gmail.com
            name: Mario
            surname: Rossi
            birthdate: 1989-03-17
            gender: male
            password: retiuyyiurtiu
            crc: 3426hbfdgsdg
            validated_at: 2023-04-04T16:08:30Z
            updated_at: 2023-06-05T20:05:20Z
            deleted_at: 2023-07-21T10:25:34Z
            version: 1
           
    FollowsList:
      type: array
      items:
        $ref: '#/components/schemas/Follows'
        
    ApiResponseFindAllAccounts:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: true
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 200
        message:
          type: string
          description: Http status description
          example: Accounts returned
        data:
          $ref: '#/components/schemas/AccountList'
          
    ApiResponseAddAccount:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: true
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 201
        message:
          type: string
          description: Http status description
          example: Account created
        data:
          $ref: '#/components/schemas/Account'
      example:
        flag: true
        code: 201
        message: Account created
        data:
          id: 1
          email: pinco_pallino@gmail.com
          name: Pinco
          surname: Pallino
          birthdate: 1980-05-14
          gender: male
          password: ab324bnmbnew
          crc: aadadeweewer
          validated_at: null
          updated_at: null
          deleted_at: null
          version: 0
        
          
    ApiResponseAccountBadRequest:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: false
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 400
        message:
          type: string
          description: Http status description
          example: Account not updated! Data provided are invalid!
        data:
          $ref: '#/components/schemas/AccountBadRequest'
          
    ApiResponseAddAccountBadRequest:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: false
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 400
        message:
          type: string
          description: Http status description
          example: Account not created! Data provided are invalid!
        data:
        
          $ref: '#/components/schemas/AddAccountBadRequest'
          
    AddAccountBadRequest:
      type: object
      properties:
        email:
          type: string
          example: 'email is required'
        name:
          type: string
          example: 'name is required'
        surname:
          type: string
          example: 'surname is required'
        birthdate:
          type: string
          example: 'birthdate is required'
        gender:
          type: string
          example: 'gender is required'
        password:
          type: string
          example: 'password is required'
        crc:
          type: string
          example: 'crc is required'
        version:
          type: string
          example: 'version is required'  
      
    AccountBadRequest:
      type: object
      properties:
        email:
          type: string
          example: 'email is required'
        name:
          type: string
          example: 'name is required'
        surname:
          type: string
          example: 'surname is required'
        birthdate:
          type: string
          example: 'birthdate is required'
        gender:
          type: string
          example: 'gender is required'
        password:
          type: string
          example: 'password is required'
        updated_at:
          type: string
          example: 'updated_at is required'
        deleted_at:
          type: string
          example: 'deleted_at is required'
        version:
          type: string
          example: 'version is required'
          
    ApiResponseFindOneAccount:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: true
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 200
        message:
          type: string
          description: Http status description
          example: Accounts returned
        data:
          $ref: '#/components/schemas/Account'
          
    ApiResponseAccountNotFound:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: false
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 404
        message:
          type: string
          description: Http status description
          example: Account with id 1 not found!
        data:
          type: object
          example: null
          
    ApiResponseUpdateAccount:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: true
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 200
        message:
          type: string
          description: Http status description
          example: Account with id 1 has been successfully updated!
        data:
          allOf:
            - $ref: '#/components/schemas/Account'
          example:
              id: 1
              email: pinco_pallino@outlook.com
              name: Pinco
              surname: Pallino
              birthdate: 1980-05-14
              gender: male
              password: ab324bnmbnew
              validated_at: 2023-04-04T16:08:30Z
              updated_at: 2023-06-05T20:05:20Z
              deleted_at: null
              version: 2
              
    ApiResponseDeleteAccount:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: true
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 200
        message:
          type: string
          description: Http status description
          example: Account with id 1 has been successfully deleted!
        data:
          type: object
          example: null

          
    ApiResponseFindAllProfiles:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: true
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 200
        message:
          type: string
          description: Http status description
          example: All profiles found
        data:
          $ref: '#/components/schemas/ProfileList'
            
    ApiResponseAddProfile:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: true
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 201
        message:
          type: string
          description: Http status description
          example: Profile created
        data:
          $ref: '#/components/schemas/Profile'

    ApiResponseAddProfileBadRequest:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: false
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 400
        message:
          type: string
          description: Http status description
          example: Profile not created! Data provided are invalid!
        data:
        
          $ref: '#/components/schemas/AddProfileBadRequest'
          
    AddProfileBadRequest:
      type: object
      properties:
        profile_name:
          type: string
          example: 'profile_name is required'
        is_private:
          type: string
          example: 'is_private is required'
        created_at:
          type: string
          example: 'created_at is required'
        version:
          type: string
          example: 'version is required'
        account:
          type: string
          example: 'account is required'

    ApiResponseFindOneProfile:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: true
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 200
        message:
          type: string
          description: Http status description
          example: Profile returned
        data:
          $ref: '#/components/schemas/Profile'
          
    ApiResponseProfileNotFound:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: false
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 404
        message:
          type: string
          description: Http status description
          example: Profile with id 1 not found!
        data:
          type: object
          example: null

    ApiResponseUpdateProfile:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: true
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 200
        message:
          type: string
          description: Http status description
          example: Profile with id 1 has been successfully updated!
        data:
          allOf:
            - $ref: '#/components/schemas/Profile'
          example:
            profile_name: pinco_pallino
            bio: 'Questo Ã¨ il profilo di Pinco Pallino'
            picture_url: null
            is_private: true
            created_at: 2023-04-04T16:08:30Z
            updated_at: 2023-06-05T20:05:20Z
            deleted_at: null
            blocked_untill: null
            version: 2
            account:
              id: 1
              email: pinco_pallino@gmail.com
              name: Pinco
              surname: Pallino
              birthdate: 1980-05-14
              gender: male
              password: ab324bnmbnew
              crc: aadadeweewer
              validated_at: 2023-04-04T16:08:30Z
              updated_at: 2023-06-05T20:05:20Z
              deleted_at: null
              version: 1
              
    ApiResponseProfileBadRequest:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: false
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 400
        message:
          type: string
          description: Http status description
          example: Profile not updated! Data provided are invalid!
        data:
          $ref: '#/components/schemas/ProfileBadRequest'
          
    ProfileBadRequest:
      type: object
      properties:
        profile_name:
          type: string
          example: 'profile_name is required'
        bio:
          type: string
          example: 'bio is required'
        picture_url:
          type: string
          example: 'bio is required'
        is_private:
          type: string
          example: 'is_private is required'
        created_at:
          type: string
          example: 'created_at is required'
        updated_at:
          type: string
          example: 'updated_at is required'
        deleted_at:
          type: string
          example: 'deleted_at is required'
        blocked_until:
          type: string
          example: 'blocked_until is required'
        version:
          type: string
          example: 'version is required'
        account:
          type: string
          example: 'account is required'
          
    ApiResponseDeleteProfile:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: true
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 200
        message:
          type: string
          description: Http status description
          example: Profile with id 1 has been successfully deleted!
        data:
          type: object
          example: null

    ApiResponseFindAllFollowers:
      type: object
      properties:
        flag:
          type: boolean
          description: Success or not
          nullable: false
          example: true
        code:
          type: integer
          format: int32
          nullable: false
          description: Http stuts code
          example: 200
        message:
          type: string
          description: Http status description
          example: Followers returned
        data:
          $ref: '#/components/schemas/FollowsList'
          