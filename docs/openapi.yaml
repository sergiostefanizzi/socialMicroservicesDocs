openapi: 3.0.3
info:
  title: Microservices Social Network
  version: 1.0.11
  description: >-
    Here are written the API definition for a social network based on
    microservices technologies. This is a master thesis project.
  termsOfService: http://swagger.io/terms/
  contact:
    email: sergio.stefanizzi@finconsgroup.com
    name: Sergio Stefanizzi
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080/api/v1
    variables: {}
    description: Development server
tags:
  - name: accounts
    description: All about accounts
  - name: profiles
    description: All about profiles
  - name: follows
    description: All about profiles followers and followings
  - name: posts
    description: All about posts
  - name: likes
    description: All about likes
  - name: comments
    description: All about comments
  - name: alerts
    description: All about alerts
  - name: admins
    description: All about admins
paths:
  /accounts:
    post:
      tags:
        - accounts
      summary: Account subscription
      description: Account subscription
      operationId: addAccount
      requestBody:
        description: The new account
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          description:  Account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  email:
                    type: string
                    format: email
                    minLength: 3
                    maxLength: 320
                  name:
                    type: string
                    minLength: 2
                    maxLength: 50
                  surname:
                    type: string
                    minLength: 2
                    maxLength: 50
                  birthdate:
                    type: string
                    format: date-time
                  gender:
                    type: string
                    enum: [MALE, FEMALE, OTHER]
                required:
                - id
                - email
                - birthdate
                - gender
        '400':
          description: Bad request! Account was not created
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    example: ['birthdate is mandatory','gender is mandatory']
                    items:
                      type: string
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/Account'
                    example:
                      email: user@example.com
                      name: string
                      surname: string
                      birthdate: null
                      gender: null
                required:
                - errors
                - data
        '409':
          description: Conflict! Account already created
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                    example: Email already exists  
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                        minLength: 3
                        maxLength: 320
                    required:
                    - email
                required:
                - error
                - data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    
  /accounts/{accountId}:
    put:
      tags:
        - accounts
      summary: Account activation
      description: Account activation
      operationId: activateAccountById
      parameters:
        - name: accountId
          in: path
          description: Id of the account to be activated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                crc:
                  type: string
                  minLength: 2
                  maxLength: 255
              required:
                - crc
      responses:
        '204':
          description: Account has been successfully activated!
        '400':
          description: Bad Request! The account has not been activated!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'crc is mandatory'
                  data:
                    type: object
                    properties:
                      crc:
                        type: string
                        minLength: 2
                        maxLength: 255
                        example: null
                    required:
                      - crc
                required:
                - errors
                - data
        '404':
          description: Account Not Found! The account has not been activated!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
                
    delete:
      tags:
        - accounts
      summary: Delete an account
      description: Delete an account
      operationId: deleteAccountById
      parameters:
        - name: accountId
          in: path
          description: Id of the account to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Account has been successfully deleted!
        '400':
          description: Bad request! Ids are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Account Not Found! The account has not been deleted!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      
    patch:
      tags:
        - accounts
      summary: Update an account
      description: Update name, surname, gender or password of an account
      operationId: updateAccountById
      parameters:
      - name: accountId
        in: path
        description: Id of the account to be updated
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 2
                  maxLength: 50
                surname:
                  type: string
                  minLength: 2
                  maxLength: 50
                gender:
                  type: string
                  enum: [MALE, FEMALE, OTHER]
                password:
                  type: string
                  format: password
                  minLength: 8
                  maxLength: 255
                  writeOnly: true
      responses:
        '200':
          description: Account has been successfully updated!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Account Not Found! The account has not been activated!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /profiles:
    post:
      tags:
        - profiles
      summary: Create a profile
      description: create a profile
      operationId: addProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '201':
          description: Profile created!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '400':
          description: Bad request! Profile has not been created
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example: ['profile_name is mandatory','is_private is mandatory']
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/Profile'
                    example:
                      profile_name: null
                      bio: string
                      picture_url: string
                      is_private: null
                required:
                - errors
                - data
        '409':
          description: Conflict! Profile already created
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                    example: Profile already exists 
                  data:
                    $ref: '#/components/schemas/Profile'
                required:
                - errors
                - data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /profiles/{profileId}:
    get:
      tags:
        - profiles
      summary: Find a profile
      description: Find a profile by id
      operationId: findProfileById
      parameters:
        - name: profileId
          in: path
          description: Profile id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Profile found
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    $ref: '#/components/schemas/Profile'
                  post_list:
                    $ref: '#/components/schemas/PostList'
        '400':
          description: Bad request! Ids are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    
    patch:
      tags:
        - profiles
      summary: Update a profile
      description: Update a profile by id
      operationId: updateProfileById
      parameters:
        - name: profileId
          in: path
          description: Profile id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile_name:
                  type: string
                  minLength: 3
                  maxLength: 30
                bio:
                  type: string
                  maxLength: 150
                picture_url:
                  type: string
                is_private:
                  type: boolean
      responses:
        '200':
          description: Profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                    example: Bad Request
                  data:
                    type: object
                    properties:
                      profile_name:
                        type: string
                        minLength: 3
                        maxLength: 30
                      bio:
                        type: string
                        maxLength: 150
                      picture_url:
                        type: string
                      is_private:
                        type: boolean
                required:
                - error
                - data
        '409':
          description: Conflict! Profile name already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                    example: Profile name already exists
                  data:
                    type: object
                    properties:
                      profile_name:
                        type: string
                        minLength: 3
                required:
                - error
                - data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
                
      
    delete:
      tags:
        - profiles
      summary: Delete a profile
      description: Delete a profile
      operationId: deleteProfileById
      parameters:
        - name: profileId
          in: path
          description: Id of the profile to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Profile has been successfully deleted!
        '400':
          description: Bad request! Ids are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile Not Found! The account has not been deleted!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    
  /profiles/search:
    get:
      tags:
        - profiles
      summary: Search profiles by name
      description: Seach profiles by name
      operationId: searchProfileByProfileName
      parameters:
        - name: profileName
          in: query
          description: Profile Name
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 30
      responses:
        '200':
          description: Profiles found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      readOnly: true
                    profile_name:
                      type: string
                      minLength: 3
                      maxLength: 30
                    picture_url:
                      type: string
                  required:
                    - id
                    - profile_name
                    - picture_url
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    
  /profiles/{profileId}/follows/{followsId}:
    post:
      tags:
        - follows
      summary: A profile follows another profile
      description: A profile follows another profile
      operationId: addFollows
      parameters:
        - name: profileId
          in: path
          description: Id of the profile that want to follow another profile
          required: true
          schema:
            type: integer
            format: int64
        - name: followsId
          in: path
          description: Id of the profile that another profile want to follow
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: You are following the profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follows'
        '202':
          description: The private profile that you want to follow has recived the request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Follows'
                example:
                  follower_id: 1
                  followed_id: 2
                  accepted: false
        '400':
          description: Bad request! Ids are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
                
    delete:
      tags:
        - follows
      summary: Delete a following
      description: Delete a following
      operationId: deleteFollowing
      parameters:
        - name: profileId
          in: path
          description: Id of the  profile
          required: true
          schema:
            type: integer
            format: int64
        - name: followsId
          in: path
          description: Id of the profile that you want to unfollow
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Profile has been successfully unfollowed!
        '400':
          description: Bad request! Ids are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
                
  /profiles/{profileId}/followedBy/{followerId}:   
    patch:
      tags:
        - follows
      summary: Accept follow request for private profile
      description: Accept follow request for private profile
      operationId: accpetFollows
      parameters:
        - name: profileId
          in: path
          description: Id of the private profile
          required: true
          schema:
            type: integer
            format: int64
        - name: followerId
          in: path
          description: Id of the profile that sent the follow request
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accepted: 
                  type: boolean
                  example: true
      responses:
        '200':
          description: Follow request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follows'
        '400':
          description: Bad request! Ids are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    minLength: 3
                    example: Profile not found
                required:
                - error
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        
        
    delete:
      tags:
        - follows
      summary: Block a follower
      description: Block a follower
      operationId: deleteFollower
      parameters:
        - name: profileId
          in: path
          description: Id of the  profile
          required: true
          schema:
            type: integer
            format: int64
        - name: followerId
          in: path
          description: Id of the profile that you want to block
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Profile has been successfully blocked!
        '400':
          description: Bad request! Ids are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile404'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
                
  /profiles/{profileId}/followers:
    get:
      tags:
        - follows
      summary: Get profile followers
      description: Get profile followers
      parameters:
        - name: profileId
          in: path
          description: Id of the profile
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Followers list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileList'
        '400':
          description: Bad request! Id is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    minLength: 3
                    example: Profile not found
                required:
                - error
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
                
  /profiles/{profileId}/followings:
    get:
      tags:
        - follows
      summary: Get profile followings
      description: Get profile followings
      parameters:
        - name: profileId
          in: path
          description: Id of the profile
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Followings list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileList'
        '400':
          description: Bad request! Id is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    minLength: 3
                    example: Profile not found
                required:
                - error
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /posts:
    post:
      tags:
        - posts
      summary: Publish a new post
      description: Publish a new post
      operationId: addPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Post has been successfully published!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad request! Post has not been published!
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example: ['content_url is mandatory','post_type is mandatory']
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/Post'
                    example:
                      content_url: 
                      caption: post caption
                      post_type: 
                required:
                - content_url
                - post_type
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              
  /posts/{postId}:
    get:
      tags:
        - posts
      summary: Find a post
      description: Find a post
      operationId: findPostById
      parameters:
        - name: postId
          in: path
          description: Id of the post
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Post found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad request! Id is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Post Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Post Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - posts
      summary: Update post caption
      description: Update post caption
      operationId: updatePostById
      parameters:
        - name: postId
          in: path
          description: Id of the post
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                caption:
                  type: string
              required:
              - caption
      responses:
        '200':
          description: Post caption updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad request! Id is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Post Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Post Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - posts
      summary: Delete post 
      description: Delete post
      operationId: deletePostById
      parameters:
        - name: postId
          in: path
          description: Id of the post
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Post has been successfully deleted!
        '400':
          description: Bad request! Id is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Post Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Post Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /feed/{profileId}:
    get:
      tags:
        - posts
      summary: Feed of the profile
      description: Feed of the profile
      operationId: profileFeedById
      parameters:
        - name: profileId
          in: path
          description: Id of the profile
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Feed found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
        '400':
          description: Bad request! Id is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Profile Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  
  /likes/{postId}/by/{profileId}:
    post:
      tags:
        - likes
      summary: Profile likes a post
      description: Profile likes a post
      operationId: addLike
      parameters:
        - name: postId
          in: path
          description: Id of the liked post
          required: true
          schema:
            type: integer
            format: int64
        - name: profileId
          in: path
          description: Id of the profile that likes a post
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Like added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
        '400':
          description: Bad request! Ids are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile or Post Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Profile or Post Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    
    delete:
      tags:
        - likes
      summary: Remove like
      description: Remove like
      operationId: deleteLikeById
      parameters:
        - name: postId
          in: path
          description: Id of the liked post
          required: true
          schema:
            type: integer
            format: int64
        - name: profileId
          in: path
          description: Id of the profile that likes a post
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Like has been removed
        '400':
          description: Bad request! Ids are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile or Post Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Profile or Post Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /likes/{postId}:
    get:
      tags:
        - likes
      summary: List of likes of a post
      description: List of likes of a post
      operationId: findAllLikesById
      parameters:
        - name: postId
          in: path
          description: Id of the liked post
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of likes found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikeList'
        '400':
          description: Bad request! Id is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Post Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Post Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
                
  /comments/{postId}/by/{profileId}:
    post:
      tags:
        - comments
      summary: Profile comments a post
      description: Profile comments a post
      operationId: addComment
      parameters:
        - name: postId
          in: path
          description: Id of the post
          required: true
          schema:
            type: integer
            format: int64
        - name: profileId
          in: path
          description: Id of the profile that commented a post
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          description: Comment added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Bad request! Ids are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile or Post Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Profile or Post Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - comments
      summary: Edit a comment
      description: Edit a comment
      operationId: updateCommentById
      parameters:
        - name: postId
          in: path
          description: Id of the post
          required: true
          schema:
            type: integer
            format: int64
        - name: profileId
          in: path
          description: Id of the profile that comments a post
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: Comment has been successfully update!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Bad request! Id is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Post Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Post Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
                
    delete:
      tags:
        - comments
      summary: Remove comment
      description: Remove comment
      operationId: deleteCommentById
      parameters:
        - name: postId
          in: path
          description: Id of the post
          required: true
          schema:
            type: integer
            format: int64
        - name: profileId
          in: path
          description: Id of the profile that comments a post
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Comment has been removed
        '400':
          description: Bad request! Ids are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile or Post Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Profile or Post Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /comments/{postId}:
    get:
      tags:
        - comments
      summary: List of comments of a post
      description: List of comments of a post
      operationId: findAllCommentsById
      parameters:
        - name: postId
          in: path
          description: Id of the post
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of comments found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentList'
        '400':
          description: Bad request! Id is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Post Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Post Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
                
  /alerts/profile/{profileId}:
    post:
      tags:
        - alerts
      summary: Send a profile alert
      description: Send a profile alert
      operationId: addProfileAlert
      parameters:
        - name: profileId
          in: path
          description: Id of the profile
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
      responses:
        '201':
          description: Alert added
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Alert'
                example:
                  id: 1
                  profile_id: 1
                  post_id: null
                  reason: reason example
        '400':
          description: Bad request! Id is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Profile Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Profile Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
                
  /alerts/post/{postId}:
    post:
      tags:
        - alerts
      summary: Send a post alert
      description: Send a post alert
      operationId: addPostAlert
      parameters:
        - name: postId
          in: path
          description: Id of the post
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
      responses:
        '201':
          description: Alert added
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Alert'
                example:
                  id: 1
                  profile_id: null
                  post_id: 1
                  reason: reason example
        '400':
          description: Bad request! Id is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Post Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Post Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
                
  /admins/{accountId}:
    post:
      tags:
        - admins
      summary: Create an admin
      description: Create an admin
      operationId: addAdminById
      parameters:
        - name: accountId
          in: path
          description: Id of the account
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Admin created!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '400':
          description: Bad request! Admin has not been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Account Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Account Not Found
        '409':
          description: Conflict! Admin already created
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    minLength: 1
                    example: Admin already exists 
                  data:
                    $ref: '#/components/schemas/Admin'
                required:
                - errors
                - data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    
    delete:
      tags:
        - admins
      summary: Remove an admin
      description: Remove an admin
      operationId: deleteAdminById
      parameters:
        - name: accountId
          in: path
          description: Id of the account
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Admin has been successfully removed!
        '400':
          description: Bad request! Admin has not been removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdBadRequest'
        '404':
          description: Account Not Found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Account Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    
components:
  schemas:
    
    Account:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 3
          maxLength: 320
        name:
          type: string
          minLength: 2
          maxLength: 50
        surname:
          type: string
          minLength: 2
          maxLength: 50
        birthdate:
          type: string
          format: date
        gender:
          type: string
          enum: [MALE, FEMALE, OTHER]
        password:
          type: string
          format: password
          minLength: 8
          maxLength: 255
          writeOnly: true
      required:
        - email
        - birthdate
        - gender
        - password

    Profile:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        profile_name:
          type: string
          minLength: 3
          maxLength: 30
        bio:
          type: string
          maxLength: 150
        picture_url:
          type: string
        is_private:
          type: boolean
      required:
        - profile_name
        - is_private
      
     
    Follows:
      type: object
      properties:
        follower_id:
          type: integer
          format: int64
          example: 1
        followed_id:
          type: integer
          format: int64
          example: 2
        accepted:
          type: boolean
      required:
        - follower_id
        - followed_id
        - accepted
        
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        content_url:
          type: string
          minLength: 1
          example: http://www.contentUrl.com/2342
        caption:
          type: string
          maxLength: 2200
        post_type:
          format: string
          enum: [POST,STORY]
      required:
        - content_url
        - post_type
    
    Like:
      type: object
      properties:
        profile_id:
          type: integer
          format: int64
          readOnly: true
          example: 1
        post_id:
          type: integer
          format: int64
          readOnly: true
          example: 2
      required:
        - profile_id
        - post_id
    
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        profile_id:
          type: integer
          format: int64
          readOnly: true
        post_id:
          type: integer
          format: int64
          readOnly: true
        content:
          type: string
          minLength: 1
          maxLength: 2200
          example: comment example
      required:
        - id
        - profile_id
        - post_id
        - content
    
    Alert:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        profile_id:
          type: integer
          format: int64
          readOnly: true
          nullable: true
        post_id:
          type: integer
          format: int64
          readOnly: true
          nullable: true
        reason:
          type: string
          minLength: 1
          maxLength: 2000
          example: reason example
      required:
      - id
      - profile_id
      - post_id
      - reason
    
    Admin:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
      required:
        - id
        
    ProfileList:
      type: array
      items:
        $ref: '#/components/schemas/Profile'
    
    PostList:
      type: array
      items: 
        $ref: '#/components/schemas/Post'
        
    LikeList:
      type: array
      items:
        $ref: '#/components/schemas/Like'
    
    CommentList:
      type: array
      items:
        $ref: '#/components/schemas/Comment'
    
    AlertList:
      type: array
      items:
        $ref: '#/components/schemas/Alert'
  
    Account404:
      type: object
      properties:
        errors:
          type: array
          example: ['Account Not found']
          items:
            type: string
      required:
      - error

    Profile404:
      type: object
      properties:
        error:
          type: string
          minLength: 1
          example: Profile not found
      required:
      - error
    
    IdBadRequest:
      type: object
      properties:
        error: 
          type: string
          minLength: 3
          example: Bad request! Id is not valid
    
    InternalServerError:
      type: object
      properties:
        error:
          type: string
          minLength: 1
          example: Internal Server Error
      required:
      - error